---
- hosts: all
  tasks:
    - name: Create Configuration Directories
      ansible.builtin.file:
        path: "{{ item }}"
        group: root
        owner: root
        state: directory
      loop:
        - /etc/modules-load.d
        - /etc/sysctl.d
        - /etc/kubelet
        - /etc/iac_flags
      become: true

    # install and configure pre-requisites
    - name: crio.conf - Set Values
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/crio.conf
        line: "{{ item }}"
        create: true
      loop:
        - "# Ansible Managed"
        - overlay
        - br_netfilter
      become: yes
    - name: load modules
      community.general.modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter
      become: true
    - name: 99-kubernetes-cri.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "# Ansible Managed"
        create: true
      become: yes
    - name: 99-kubernetes-cri.conf - Set Values
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: "1"
        sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
        sysctl_set: true
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward
      become: true
    - name: addPackage signing Keys
      ansible.builtin.apt_key:
        url: "{{ item.url }}"
        keyring: "{{ item.keyring }}"
        id: "{{ item.key_id }}"
        state: present
      loop:
        - url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ com.ryezone.platform.k8s.cri_o.os }}/Release.key"
          keyring: /etc/apt/trusted.gpg.d/libcontainers.gpg
          key_id: 2472D6D0D2F66AF87ABA8DA34D64390375060AA4
        - url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ com.ryezone.platform.k8s.cri_o.version }}/{{ com.ryezone.platform.k8s.cri_o.os }}/Release.key"
          keyring: /etc/apt/trusted.gpg.d/libcontainers-cri-o.gpg
          key_id: 2472D6D0D2F66AF87ABA8DA34D64390375060AA4
        - url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          keyring: /etc/apt/trusted.gpg.d/google_cloud_packages.gpg
          key_id: 54A647F9048D5688D7DA2ABE6A030B21BA07F4FB
      become: true
    - name: Add Package Repositories
      ansible.builtin.apt_repository:
        repo: "{{ item.repo }}"
        filename: "{{ item.path }}"
        state: present
      loop:
        - path: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable
          repo: "deb [arch=amd64] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ com.ryezone.platform.k8s.cri_o.os }}/ /"
        - path: "/etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:{{ com.ryezone.platform.k8s.cri_o.version }}"
          repo: "deb [arch=amd64] http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ com.ryezone.platform.k8s.cri_o.version }}/{{ com.ryezone.platform.k8s.cri_o.os }}/ /"
        - path: /etc/apt/sources.list.d/kubernetes
          repo: "deb https://apt.kubernetes.io/ kubernetes-{{ com.ryezone.platform.k8s.kubeadm.release }} main"
      become: true
    - name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
      apt:
        update_cache: yes
        cache_valid_time: 3600
      become: true
    - name: Install Packages
      ansible.builtin.apt:
        name: "{{ item }}"
      loop:
        - cri-o
        - cri-o-runc
        - kubelet
        - kubeadm
        - kubectl
      become: true
    - name: get apt mark holds
      ansible.builtin.command: apt-mark showhold
      register: holds
      changed_when: false
      become: true
    - name: apt mark packages
      ansible.builtin.command: "apt-mark hold {{item}}"
      loop:
        - cri-o
        - cri-o-runc
        - kubelet
        - kubeadm
        - kubectl
      when: item not in holds.stdout
      become: true
    - name: Clear default kubeadm files
      ansible.builtin.command:
        cmd: kubeadm reset --force
        creates: /etc/iac_flags/kubeadm_reset.log
      become: true
    - name: create kubeadm reset flag
      ansible.builtin.lineinfile:
        path: /etc/iac_flags/kubeadm_reset.log
        line: delete this file to enable the Clear default kubeadm files task.
        create: true
      become: true
    - name: Create Configuration Files
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/{{ item }}"
        mode: "644"
        owner: root
        group: root
      loop:
        - etc/crio/crio.conf.d/02-cgroup-manager.conf
        - etc/kubelet/config.yaml
      become: true
    - name: Enable CRI-O Daemon
      ansible.builtin.systemd:
        name: crio
        daemon_reload: true
        enabled: true
        state: started
      become: true
    - name: Disable Swap
      ansible.builtin.command:
        cmd: swapoff -a
        creates: /etc/iac_flags/swapoff.log
      become: true
    - name: create swapoff flag
      ansible.builtin.lineinfile:
        path: /etc/iac_flags/swapoff.log
        line: delete this file to enable the Disable Swap task.
        create: true
      become: true
    - name: Ensure Swap file path is removed
      ansible.builtin.file:
        path: /swapfile
        state: absent
      become: true
    - name: Manage swap file entry in fstab.
      mount:
        name: none
        src: /swapfile
        fstype: swap
        opts: sw
        state: absent
      become: true

- hosts: controlplane01
  tasks:
    - name: Create Configuration Directories
      ansible.builtin.file:
        path: "{{ item }}"
        group: root
        owner: root
        state: directory
      loop:
        - /etc/haproxy
        - /etc/keepalived
        - /etc/kubernetes
        - /etc/kubernetes/manifests
      become: true
    - name: Create Configuration Files
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/{{ item }}"
        mode: "644"
        owner: root
        group: root
      loop:
        - etc/haproxy/haproxy.cfg
        - etc/keepalived/keepalived.conf
        - etc/kubernetes/manifests/haproxy.yml
        - etc/kubernetes/manifests/keepalived.yml
      become: true
    - name: Create Configuration Files
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/{{ item }}"
        mode: "755"
        owner: root
        group: root
      loop:
        - etc/keepalived/check_apiserver.sh
      become: true
    - name: run kubeadm init on initial controlplane node
      command:
        argv:
          - kubeadm
          - init
          - --control-plane-endpoint
          - "kube-api.{{ com.ryezone.platform.environment }}.{{ com.ryezone.platform.cloudflare.zone }}:{{ com.ryezone.platform.k8s.kube_api_server.port }}"
          - --apiserver-cert-extra-sans
          - "{{ansible_hostname}}.{{ com.ryezone.platform.environment }}.{{ com.ryezone.platform.cloudflare.zone }}"
          - --apiserver-cert-extra-sans
          - "{{ com.ryezone.platform.k8s.kube_api_server.keepalived.vip }}"
          - --apiserver-advertise-address
          - "{{ com.ryezone.node.ip_advertise_address }}"
          - --upload-certs
        creates: /etc/kubernetes/manifests/kube-apiserver.yaml
      become: true
    - name: Create .kube Directory
      ansible.builtin.file:
        path: "{{ item }}"
        group: vagrant
        owner: vagrant
        state: directory
      loop:
        - /home/vagrant/.kube
    - name: Copy kube config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: true
        owner: vagrant
        group: vagrant
      become: true
    - name: register kube config content
      ansible.builtin.command:
        cmd: cat /home/vagrant/.kube/config
      register: kube_config
    - name: register kube ca.crt
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/ca.crt
      register: kube_ca_crt
    - name: register kube ca.key
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/ca.key
      register: kube_ca_key
      become: true
    - name: register kube sa.key
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/sa.key
      register: kube_sa_key
      become: true
    - name: register kube sa.pub
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/sa.pub
      register: kube_sa_pub
      become: true
    - name: register kube front-proxy-ca.crt
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/front-proxy-ca.crt
      register: kube_front_proxy_ca_crt
      become: true
    - name: register kube front-proxy-ca.key
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/front-proxy-ca.key
      register: kube_front_proxy_ca_key
      become: true
    - name: register kube etcd/ca.key
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/etcd/ca.key
      register: kube_etcd_ca_key
      become: true
    - name: register kube etcd/ca.crt
      ansible.builtin.command:
        cmd: cat /etc/kubernetes/pki/etcd/ca.crt
      register: kube_etcd_ca_crt
      become: true

- hosts: controlplane
  tasks:
    - name: check join status
      ansible.builtin.stat:
        path: /etc/kubernetes/manifests/kube-apiserver.yaml
      register: control_plane_joined
    - name: Create Configuration Directories
      ansible.builtin.file:
        path: "{{ item }}"
        group: root
        owner: root
        state: directory
      loop:
        - /etc/haproxy
        - /etc/keepalived
        - /etc/kubernetes
        - /etc/kubernetes/pki
        - /etc/kubernetes/pki/etcd
        - /etc/kubernetes/manifests
      become: true
    - name: Create .kube Directory
      ansible.builtin.file:
        path: "{{ item }}"
        group: vagrant
        owner: vagrant
        state: directory
      loop:
        - /home/vagrant/.kube
    - name: write kube config
      ansible.builtin.copy:
        dest: /home/vagrant/.kube/config
        content: "{{ hostvars['controlplane01']['kube_config'].stdout }}"
        owner: vagrant
        group: vagrant
    - name: write kube ca.crt
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/ca.crt
        content: "{{ hostvars['controlplane01']['kube_ca_crt'].stdout }}"
        owner: root
        group: root
        mode: "644"
      when:
        - hostvars['controlplane01']['kube_ca_crt'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: write kube ca.key
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/ca.key
        content: "{{ hostvars['controlplane01']['kube_ca_key'].stdout }}"
        owner: root
        group: root
        mode: "600"
      when:
        - hostvars['controlplane01']['kube_ca_key'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: write kube sa.key
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/sa.key
        content: "{{ hostvars['controlplane01']['kube_sa_key'].stdout }}"
        owner: root
        group: root
        mode: "600"
      when:
        - hostvars['controlplane01']['kube_sa_key'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: write kube sa.pub
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/sa.pub
        content: "{{ hostvars['controlplane01']['kube_sa_pub'].stdout }}"
        owner: root
        group: root
        mode: "644"
      when:
        - hostvars['controlplane01']['kube_sa_pub'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: write kube front-proxy-ca.crt
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/front-proxy-ca.crt
        content: "{{ hostvars['controlplane01']['kube_front_proxy_ca_crt'].stdout }}"
        owner: root
        group: root
        mode: "644"
      when:
        - hostvars['controlplane01']['kube_front_proxy_ca_crt'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: write kube front-proxy-ca.key
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/front-proxy-ca.key
        content: "{{ hostvars['controlplane01']['kube_front_proxy_ca_key'].stdout }}"
        owner: root
        group: root
        mode: "600"
      when:
        - hostvars['controlplane01']['kube_front_proxy_ca_key'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: write kube etcd/ca.key
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/etcd/ca.key
        content: "{{ hostvars['controlplane01']['kube_etcd_ca_key'].stdout }}"
        owner: root
        group: root
        mode: "600"
      when:
        - hostvars['controlplane01']['kube_etcd_ca_key'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: write kube etcd/ca.crt
      ansible.builtin.copy:
        dest: /etc/kubernetes/pki/etcd/ca.crt
        content: "{{ hostvars['controlplane01']['kube_etcd_ca_crt'].stdout }}"
        owner: root
        group: root
        mode: "644"
      when:
        - hostvars['controlplane01']['kube_etcd_ca_crt'] is defined
        - not control_plane_joined.stat.exists
      become: true
    - name: join control plane node
      ansible.builtin.command:
        cmd: >
          kubeadm join
          --discovery-file /home/vagrant/.kube/config
          --control-plane
          --apiserver-advertise-address {{ com.ryezone.node.ip_advertise_address }}
        creates: /etc/kubernetes/manifests/kube-apiserver.yaml
      when:
        - not control_plane_joined.stat.exists
      become: true
    - name: Create Configuration Files
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/{{ item }}"
        mode: "644"
        owner: root
        group: root
      loop:
        - etc/haproxy/haproxy.cfg
        - etc/keepalived/keepalived.conf
        - etc/kubernetes/manifests/haproxy.yml
        - etc/kubernetes/manifests/keepalived.yml
      when: control_plane_joined.stat.exists
      become: true
    - name: Create Configuration Files
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/{{ item }}"
        mode: "755"
        owner: root
        group: root
      loop:
        - etc/keepalived/check_apiserver.sh
      when: control_plane_joined.stat.exists
      become: true

- name: check join status
  ansible.builtin.stat:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
  register: control_plane_joined

# Pull kube conf to node.

# - name: Create .kube Directory
#   ansible.builtin.file:
#     path: "/home/{{ ansible_user }}/.kube"
#     group: "{{ ansible_user }}"
#     owner: "{{ ansible_user }}"
#     state: directory
#   when:
#     - kubernetes_is_initial_controlplane
#     - not control_plane_joined.stat.exists

# - name: Copy kube config
#   ansible.builtin.copy:
#     content: "{{ hostvars[kubernetes_initial_controlplane_hostvar_key]['kube_config'].stdout }}"
#     dest: "/home/{{ ansible_user }}/.kube/config"
#     remote_src: true
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#   when:
#     - hostvars[kubernetes_initial_controlplane_hostvar_key]['kube_config'] is defined
#     - not control_plane_joined.stat.exists

- name: Join Additional Controlplane Node
  ansible.builtin.command:
    argv:
      - kubeadm
      - join
      - "{{ kubernetes_control_plane_endpoint_address }}:{{ kubernetes_control_plane_endpoint_port }}"
      - --apiserver-advertise-address
      - "{{ kubernetes_advertise_address }}"
      - --certificate-key
      - "{{ hostvars[kubernetes_initial_controlplane_hostvar_key]['certificate_key'].stdout }}"
      - --control-plane
      - --discovery-token
      - "{{ hostvars[kubernetes_initial_controlplane_hostvar_key]['discovery_token'].stdout }}"
      - --discovery-token-ca-cert-hash
      - "sha256:{{ hostvars[kubernetes_initial_controlplane_hostvar_key]['discovery_token_ca_cert_hash'].stdout }}"
  when:
    - not control_plane_joined.stat.exists
    - hostvars[kubernetes_initial_controlplane_hostvar_key]['certificate_key'] is defined
    - hostvars[kubernetes_initial_controlplane_hostvar_key]['discovery_token'] is defined
    - hostvars[kubernetes_initial_controlplane_hostvar_key]['discovery_token_ca_cert_hash'] is defined
  become: true